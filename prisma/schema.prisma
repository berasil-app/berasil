generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  email      String    @unique @db.VarChar
  password   String    @db.VarChar
  history    history[]
  profile    profile?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model history {
  id               BigInt   @id @default(autoincrement())
  created_at       DateTime @default(now()) @db.Timestamptz(6)
  user_id          String   @db.Uuid
  photo_url        String?  @db.VarChar
  name             String?  @db.VarChar
  category         String?  @db.VarChar
  total_object     String?  @db.VarChar
  total_rice       String?  @db.VarChar
  type_rice        String?  @db.VarChar
  water_rate       String?  @db.VarChar
  contaiminant     String?  @db.VarChar
  smell_rice       String?  @db.VarChar
  degree_of_figure String?  @db.VarChar
  price            Int?
  user             user     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model profile {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  edited_at  DateTime? @default(now()) @db.Timestamptz(6)
  user_id    String    @unique @db.Uuid
  first_name String    @db.VarChar
  last_name  String    @db.VarChar
  use_as     String?   @db.VarChar
  user       user      @relation(fields: [user_id], references: [id], onDelete: Cascade)
}
